{
  "hash": "55ea4a8367cacc0dade5e48a51ae8ece",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Behavioral Healthcare Workforce Incentives Dashboard\"\noutput: \n  flexdashboard::flex_dashboard:\n    orientation: rows\n    vertical_layout: fill\n    theme: cosmo\nruntime: shiny\neditor: source\n---\n\n\n::: {.cell context='setup'}\n\n```{.r .cell-code}\n# -----------------------------------------------------------------------------\n# 1. Setup/Dependencies (Package Manager)\n# -----------------------------------------------------------------------------\n\nif (!require(\"pacman\")) {\n  install.packages(\"pacman\", repos = \"[https://cran.rstudio.org](https://cran.rstudio.org)\")\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: pacman\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(pacman)\n\n# Core/Essential Packages (General R use)\np_load(\n  here,\n  conflicted,\n  english,\n  labelled,\n  rlang,\n  xfun,\n  rio,\n  archive,\n  filesstrings,\n  googledrive,\n  googlesheets4,\n  reprex,\n  knitr,\n  \n  # New packages for dashboard\n  flexdashboard, # The dashboard framework\n  shiny,         # For interactive components\n  DT,            # For interactive tables\n  lubridate,     # For date and time manipulation\n  stringr        # For string manipulation, used in cleaning\n)\n\n# Data Manipulation and Transformation (Tidyverse first, then others)\np_load(tidyverse, janitor, bestNormalize, mice, skimr)\n\n# Tables\np_load(gt, gtsummary, gtExtras, flextable)\n\n# Visualization (ggplot2 related first)\np_load(\n  scales,\n  systemfonts,\n  extrafont,\n  showtext,\n  patchwork,\n  ggpp,\n  ggExtra,\n  ggalt,\n  ggpubr,\n  ggridges,\n  ggfittext,\n  ggtext,\n  ggthemes,\n  ggsci,\n  scico,\n  hrbrthemes,\n  xkcd,\n  harrypotter,\n  viridis\n)\n\n# Visualization (GitHub)\np_load_gh(\n  \"AliciaSchep/gglabeller\",\n  \"MarcellGranat/ggProfessional\",\n  \"mattcowgill/ggannotate\",\n  \"amirmasoudabdol/sfthemes\"\n)\n\n# -----------------------------------------------------------------------------\n# 2. Conflict Resolution (After loading)\n# -----------------------------------------------------------------------------\n\nconflicts_prefer(\n  dplyr::filter,\n  dplyr::first,\n  dplyr::summarize,\n  dplyr::select,\n  janitor::clean_names,\n  janitor::chisq.test,\n  lubridate::year,\n  rio::export,\n  tidyselect::starts_with,\n  tidygeocoder::geocode\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[conflicted] Will prefer dplyr::filter over any other package.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[conflicted] Will prefer dplyr::first over any other package.\n[conflicted] Will prefer dplyr::summarize over any other package.\n[conflicted] Will prefer dplyr::select over any other package.\n[conflicted] Will prefer janitor::clean_names over any other package.\n[conflicted] Will prefer janitor::chisq.test over any other package.\n[conflicted] Will prefer lubridate::year over any other package.\n[conflicted] Will prefer rio::export over any other package.\n[conflicted] Will prefer tidyselect::starts_with over any other package.\n[conflicted] Will prefer tidygeocoder::geocode over any other package.\n```\n\n\n:::\n\n```{.r .cell-code}\n# -----------------------------------------------------------------------------\n# 3. Global Options, Themes, and Table Settings\n# -----------------------------------------------------------------------------\n\n# Global Options\nset.seed(13) # Random seed for reproducibility\noptions(scipen = 9999) # Large number for scientific notation preference\n\n# gtsummary Themes\ngtsummary::theme_gtsummary_journal(journal = \"jama\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting theme \"JAMA\"\n```\n\n\n:::\n\n```{.r .cell-code}\ngtsummary::theme_gtsummary_compact()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting theme \"Compact\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# flextable Defaults (Font check!)\nflextable::set_flextable_defaults(\n  table.layout = \"autofit\",\n  font.size = 10,\n  font.family = \"Times New Roman\",\n  padding.top = 0,\n  padding.bottom = 0\n)\n\n# custom color palette\nmchd_county_logo_blue = \"#326195\"\nmchd_county_logo_green = \"#48773C\"\nmchd_green = \"#385D2F\"\nmchd_claret = \"#8C183E\"\nmchd_deep_saffron = \"#F79232\"\nmchd_copper_rose = \"#9b6167\"\nmchd_light_cerulean = \"#72CCD4\"\n\nperma_list <- c(\n  \"data_repo\",\n  \"gis_repo\",\n  \"mchd_claret\",\n  \"mchd_copper_rose\",\n  \"mchd_county_logo_blue\",\n  \"mchd_county_logo_green\",\n  \"mchd_deep_saffron\",\n  \"mchd_green\",\n  \"mchd_light_cerulean\"\n)\n\n# Enable showtext for custom fonts\nshowtext::showtext_auto()\n\n# -----------------------------------------------------------------------------\n# 4. Read Google Sheet and Prepare Data\n# -----------------------------------------------------------------------------\n\nsheets_url <- \"https://docs.google.com/spreadsheets/d/1lRMyvGBAXcUaQtmBxXDFyrs889L505OFRRyvC0zQJtg/edit?usp=drive_link\"\nmy_sheet <- googledrive::drive_get(sheets_url)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Using an auto-discovered, cached token.\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n  See gargle's \"Non-interactive auth\" vignette for more details:\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\nℹ The googledrive package is using a cached token for\n  'nathan.parsons@multco.us'.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Read the raw data and immediately fix the misspelling\nraw_data <- googlesheets4::read_sheet(my_sheet) %>%\n  mutate(Race = str_replace(Race, \"Black of African American\", \"Black or African American\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Using an auto-discovered, cached token.\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n  See gargle's \"Non-interactive auth\" vignette for more details:\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\nℹ The googlesheets4 package is using a cached token for\n  'nathan.parsons@multco.us'.\n✔ Reading from\n  \"_Funding Request (Responses) and Tracker(BH Workforce Initiative Funding Request Form)\".\n✔ Range 'Form Responses 1'.\nNew names:\n```\n\n\n:::\n\n```{.r .cell-code}\n# --- Grouping logic ---\n\n# Create a temporary program_clean column to count frequencies\nprogram_clean <- raw_data %>%\n  mutate(program_clean = str_trim(str_extract(`Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.`, \"^[^,]+\"))) %>%\n  pull(program_clean)\n\n# Find the top 9 programs from the cleaned data\ntop_9_programs <- raw_data %>%\n  mutate(program_clean = str_trim(str_extract(`Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.`, \"^[^,]+\"))) %>%\n  count(program_clean) %>%\n  arrange(desc(n)) %>%\n  slice(1:9) %>%\n  pull(program_clean)\n\n# Find the top 5 races from the cleaned data\ntop_5_races <- raw_data %>%\n  mutate(race_clean = str_trim(str_extract(`Race`, \"^[^,]+\"))) %>%\n  count(race_clean) %>%\n  arrange(desc(n)) %>%\n  slice(1:5) %>%\n  pull(race_clean)\n\n# Find the top 5 gender identities from the cleaned data\ntop_5_genders <- raw_data %>%\n  mutate(gender_clean = str_trim(str_extract(`Gender Identity`, \"^[^,]+\"))) %>%\n  count(gender_clean) %>%\n  arrange(desc(n)) %>%\n  slice(1:5) %>%\n  pull(gender_clean)\n\n# Find the top 5 sexual orientations from the cleaned data\ntop_5_orientations <- raw_data %>%\n  mutate(orientation_clean = str_trim(str_extract(`Sexual Orientation`, \"^[^,]+\"))) %>%\n  count(orientation_clean) %>%\n  arrange(desc(n)) %>%\n  slice(1:5) %>%\n  pull(orientation_clean)\n\n# Group programs, race, gender, and sexual orientation into top N or 'Other' and then select final columns\ndata <- raw_data %>%\n  mutate(\n    # Date and fiscal quarter handling\n    date = as.Date(Timestamp),\n    fiscal_year_calc = if_else(month(date) < 7, year(date), year(date) + 1),\n    fiscal_quarter = factor(\n      paste0(\"FY\", fiscal_year_calc, \" Q\", quarter(date, fiscal_start = 7)),\n      levels = unique(paste0(\"FY\", fiscal_year_calc, \" Q\", quarter(date, fiscal_start = 7)))\n    ),\n    \n    # Program grouping\n    program_group = if_else(\n      str_trim(str_extract(`Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.`, \"^[^,]+\")) %in% top_9_programs,\n      str_trim(str_extract(`Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.`, \"^[^,]+\")),\n      \"Other\"\n    ),\n    \n    # Race grouping\n    race_group = if_else(\n      str_trim(str_extract(`Race`, \"^[^,]+\")) %in% top_5_races,\n      str_trim(str_extract(`Race`, \"^[^,]+\")),\n      \"Other\"\n    ),\n    \n    # Gender grouping\n    gender_group = if_else(\n      str_trim(str_extract(`Gender Identity`, \"^[^,]+\")) %in% top_5_genders,\n      str_trim(str_extract(`Gender Identity`, \"^[^,]+\")),\n      \"Other\"\n    ),\n    \n    # Sexual orientation grouping\n    sexual_orientation_group = if_else(\n      str_trim(str_extract(`Sexual Orientation`, \"^[^,]+\")) %in% top_5_orientations,\n      str_trim(str_extract(`Sexual Orientation`, \"^[^,]+\")),\n      \"Other\"\n    )\n  ) %>%\n  filter(!is.na(date)) %>%\n  select(\n    status = `Approval Status`,\n    date,\n    fiscal_quarter,\n    race = `Race`,\n    race_group,\n    gender_identity = `Gender Identity`,\n    gender_group,\n    sexual_orientation = `Sexual Orientation`,\n    sexual_orientation_group,\n    funding_for = `Please select the item you are requesting funding for:`,\n    program = `Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.`,\n    program_group,\n    managers_approval = `Have you received your supervisor's or manager's approval for this request?`,\n    represented_status = `Union/Representation Status of staff receiving/using the funding`,\n    amount_approved = `Amount Approved`\n  )\n\n# Read and clean the funding data\nfunding_data <- googlesheets4::read_sheet(my_sheet,\n                                         sheet = \"Funding Tracking\",\n                                         range = \"A5:E\",\n                                         col_types = \"ccccn\") %>%\n  select(\n    date = `Date Funding was approved or Invoice received`,\n    staff = `Staff using funding`,\n    represented_status = `Represented Status`,\n    approved_for = `Approved for`,\n    amount_approved = `Amount Approved`\n  ) %>%\n  filter(!is.na(date)) %>%\n  mutate(\n    date = mdy(date),\n    fiscal_year_calc = if_else(month(date) < 7, year(date), year(date) + 1),\n    fiscal_quarter = factor(\n      paste0(\"FY\", fiscal_year_calc, \" Q\", quarter(date, fiscal_start = 7)),\n      levels = unique(paste0(\"FY\", fiscal_year_calc, \" Q\", quarter(date, fiscal_start = 7)))\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ Reading from\n  \"_Funding Request (Responses) and Tracker(BH Workforce Initiative Funding Request Form)\".\n✔ Range ''Funding Tracking'!A5:E'.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\nWarning in .Primitive(\"as.double\")(x, ...): NAs introduced by coercion\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `date = mdy(date)`.\nCaused by warning:\n!  3 failed to parse.\n```\n\n\n:::\n:::\n\n\n# Programs \n\n## Inputs {.sidebar}\n\n\n::: {.cell context='interactive'}\n\n```{.r .cell-code}\nselectizeInput(\n  inputId = \"fiscal_quarter_programs\",\n  label = \"Select Fiscal Quarter(s):\",\n  choices = sort(unique(data$fiscal_quarter)),\n  selected = unique(data$fiscal_quarter), # Select all by default\n  multiple = TRUE\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"fiscal_quarter_programs-label\" for=\"fiscal_quarter_programs\">Select Fiscal Quarter(s):</label>\n<div>\n<select class=\"shiny-input-select form-control\" id=\"fiscal_quarter_programs\" multiple=\"multiple\"><option value=\"FY2024 Q2\" selected>FY2024 Q2</option>\n<option value=\"FY2024 Q3\" selected>FY2024 Q3</option>\n<option value=\"FY2024 Q4\" selected>FY2024 Q4</option>\n<option value=\"FY2025 Q1\" selected>FY2025 Q1</option>\n<option value=\"FY2025 Q2\" selected>FY2025 Q2</option>\n<option value=\"FY2025 Q3\" selected>FY2025 Q3</option>\n<option value=\"FY2025 Q4\" selected>FY2025 Q4</option>\n<option value=\"FY2026 Q1\" selected>FY2026 Q1</option></select>\n<script type=\"application/json\" data-for=\"fiscal_quarter_programs\">{\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n```\n\n:::\n\n```{.r .cell-code}\nselectizeInput(\n  inputId = \"program_filter_programs\",\n  label = \"Select Program(s):\",\n  choices = sort(unique(data$program_group)),\n  selected = unique(data$program_group),\n  multiple = TRUE\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"form-group shiny-input-container\">\n<label class=\"control-label\" id=\"program_filter_programs-label\" for=\"program_filter_programs\">Select Program(s):</label>\n<div>\n<select class=\"shiny-input-select form-control\" id=\"program_filter_programs\" multiple=\"multiple\"><option value=\"Adult Protective Services and Risk Case Management\" selected>Adult Protective Services and Risk Case Management</option>\n<option value=\"Call Center/Crisis Services\" selected>Call Center/Crisis Services</option>\n<option value=\"CMHP - Safety Net Services Unit\" selected>CMHP - Safety Net Services Unit</option>\n<option value=\"Direct Clinical Services Unit\" selected>Direct Clinical Services Unit</option>\n<option value=\"Early Assessment and Support Alliance (EASA)\" selected>Early Assessment and Support Alliance (EASA)</option>\n<option value=\"Early Childhood Services (EC)\" selected>Early Childhood Services (EC)</option>\n<option value=\"Other\" selected>Other</option>\n<option value=\"Quality Management Unit\" selected>Quality Management Unit</option>\n<option value=\"School Based Mental Health (SBMH)\" selected>School Based Mental Health (SBMH)</option>\n<option value=\"Wraparound\" selected>Wraparound</option></select>\n<script type=\"application/json\" data-for=\"program_filter_programs\">{\"plugins\":[\"selectize-plugin-a11y\"]}</script>\n</div>\n</div>\n```\n\n:::\n:::\n\n\n\n::: {.cell context='interactive'}\n\n```{.r .cell-code}\n# This is the reactive expression for the Programs tab\nfiltered_data_programs <- reactive({\n  data %>%\n    filter(\n      fiscal_quarter %in% input$fiscal_quarter_programs,\n      program_group %in% input$program_filter_programs\n    )\n})\n\n# Reactive expression for the funding data\nfiltered_funding <- reactive({\n  funding_data %>%\n    filter(fiscal_quarter %in% input$fiscal_quarter)\n})\n```\n:::\n\n\n## Row {height=\"20%\"}\n\n### Column {width = \"30%\"}\n\n\n::: {.cell content='valuebox'}\n\n```{.r .cell-code}\n# Calculate Overall Applications\nrenderValueBox({\n  total_applications <- nrow(filtered_data())\n  valueBox(\n    value = total_applications,\n    caption = \"Total Applications\",\n    icon = \"fa-solid fa-file-invoice\",\n    color = \"primary\"\n  )\n})\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"shiny-html-output shiny-html-output shiny-valuebox-output\" height=\"160px\" id=\"outeb26e6fe1b317afa\" width=\"100%\"></div>\n```\n\n:::\n:::\n\n\n### Column {width = \"30%\"}\n\n\n::: {.cell content='valuebox'}\n\n```{.r .cell-code}\n# Calculate Approval %\nrenderValueBox({\n  approved_applications <- filtered_data() %>% filter(status == \"Approved\")\n  if (nrow(filtered_data()) > 0) {\n    approval_rate <- nrow(approved_applications) / nrow(filtered_data()) * 100\n  } else {\n    approval_rate <- 0\n  }\n  valueBox(\n    value = paste0(round(approval_rate, 1), \"%\"),\n    caption = \"Approval Rate\",\n    icon = \"fa-solid fa-check-to-slot\",\n    color = \"success\"\n  )\n})\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"shiny-html-output shiny-html-output shiny-valuebox-output\" height=\"160px\" id=\"outf7e74865f3677e5f\" width=\"100%\"></div>\n```\n\n:::\n:::\n\n\n### Column {width = \"30%\"}\n\n\n::: {.cell content='valuebox'}\n\n```{.r .cell-code}\n# Calculate Total Funding\nrenderValueBox({\n  total_funding <- sum(filtered_funding()$amount_approved, na.rm = TRUE)\n  valueBox(\n    value = paste0(\"$\", formatC(total_funding, format = \"f\", big.mark = \",\", digits = 0)),\n    caption = \"Total Funding\",\n    icon = \"fa-solid fa-dollar-sign\",\n    color = \"info\"\n  )\n})\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"shiny-html-output shiny-html-output shiny-valuebox-output\" height=\"160px\" id=\"out22ba0a0fa96d4c0e\" width=\"100%\"></div>\n```\n\n:::\n:::\n\n\n## Row {height=\"40%\"}\n\n\n\n## Row {height=\"40%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenderPlot({\n  plot_data <- filtered_data_programs() %>%\n    count(program_group)\n  \n  if (nrow(plot_data) > 0) {\n    ggplot(plot_data, aes(x = program_group, y = n)) +\n      geom_bar(stat = \"identity\", position = \"dodge\") +\n      labs(\n        title = \"Title\",\n        x = \"Programs\",\n        y = \"Number of Applications\"\n      ) +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  }\n})\n```\n:::\n\n\n## Row {height=\"40%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenderDT({\n  filtered_data_programs() %>%\n  datatable(options = list(pageLength = 10))\n})\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-widget-output shiny-report-size html-fill-item\" id=\"oute0e12a47783c2efd\" style=\"width:100%;height:auto;\"></div>\n```\n\n:::\n:::\n\n\nselectizeInput(\n  inputId = \"represented_status_filter\",\n  label = \"Select Representation Status:\",\n  choices = sort(unique(data$represented_status)),\n  selected = unique(data$represented_status),\n  multiple = TRUE\n)\n\nselectizeInput(\n  inputId = \"race_filter\",\n  label = \"Select Race:\",\n  choices = sort(unique(data$race_group)),\n  selected = unique(data$race_group),\n  multiple = TRUE\n)\n\nselectizeInput(\n  inputId = \"gender_filter\",\n  label = \"Select Gender Identity:\",\n  choices = sort(unique(data$gender_group)),\n  selected = unique(data$gender_group),\n  multiple = TRUE\n)\n",
    "supporting": [
      "workforce-development-dash_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"workforce-development-dash_files/libs/selectize-0.15.2/css/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"workforce-development-dash_files/libs/selectize-0.15.2/js/selectize.min.js\"></script>\n<script src=\"workforce-development-dash_files/libs/selectize-0.15.2/accessibility/js/selectize-plugin-a11y.min.js\"></script>\n<link href=\"workforce-development-dash_files/libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"workforce-development-dash_files/libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"workforce-development-dash_files/libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"workforce-development-dash_files/libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"workforce-development-dash_files/libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"workforce-development-dash_files/libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"workforce-development-dash_files/libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
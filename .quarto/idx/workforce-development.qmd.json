{"title":"-----------------------------------------------------------------------------","markdown":{"yaml":{"title":"","author":"","date":"`r format(Sys.Date(), '%B %d, %Y')`","format":{"docx":"default","html":{"toc":true,"embed-resources":true},"pdf":"default"},"editor":"source","execute":{"echo":false,"eval":true,"message":false,"warning":false,"error":false}},"headingText":"-----------------------------------------------------------------------------","containsRefs":false,"markdown":"\n\n```{r}\n#| label: set-working-directory\n#| message: false\n#| warning: false\n#| error: false\n\nrequire(here)\nhere::i_am(\"_archive/_anchor.R\")\n```\n\n```{r}\n#| label: load-packages\n#| message: false\n#| warning: false\n#| error: false\n\n# 1. Setup/Dependencies (Package Manager)\n# -----------------------------------------------------------------------------\n\nif (!require(\"pacman\")) {\n  install.packages(\"pacman\", repos = \"https://cran.rstudio.org\")\n}\nlibrary(pacman)\n\n\n# -----------------------------------------------------------------------------\n# 2. Package Loading (Streamlined and Reorganized)\n# -----------------------------------------------------------------------------\n\n# Core/Essential Packages (General R use)\np_load(\n  here,          # Folder/file management\n  conflicted,    # Package conflict management\n  english,       # Translate integers into text\n  labelled,      # Manipulate variable/value metadata\n  rlang,         # Functions for base R and tidyverse features\n  xfun,          # Miscellaneous functions\n  rio,           # Universal import/export\n  archive,       # Archive files\n  filesstrings,  # String manipulation\n  googledrive,   # Interact with Google Drive\n  reprex,        # Reproducible examples\n  knitr        # Dynamic report generation\n)\n\n# Data Manipulation and Transformation (Tidyverse first, then others)\np_load(\n  tidyverse,      # Tidy data handling and analysis (includes dplyr, tidyr, ggplot2, etc.)\n  janitor,       # Data cleaning and examination\n  bestNormalize, # Data normalization\n  mice,          # Multivariate imputation\n  skimr          # Summary statistics\n)\n\n# Tables\np_load(\n  gt,            # Presentation-ready tables\n  gtsummary,     # Publication-ready tables\n  gtExtras,      # Additional gt functions\n  flextable      # MS Office compatible tables\n)\n\n# Survey Analysis\np_load(\n  survey,        # Survey analysis\n  srvyr,         # Survey analysis\n  anesrake       # ANES Raking\n)\n\n# Spatial Analysis (sf preferred, then others)\np_load(\n  sf,            # Simple features (primary spatial package)\n  sfd,           # Space-Filling Design Library\n  sftime,        # Simple Features Time Series\n  spdep,         # Spatial dependence\n  raster,        # Raster data handling\n  CARBayes,      # Bayesian spatial modeling\n  tidycensus,    # US Census data\n  tidygeocoder,  # Geocoding\n  geojsonio,     # GeoJSON/TopoJSON conversion\n  geogrid,       # Geospatial data\n  ggspatial,     # Spatial visualization\n  tmap,          # Thematic maps\n  tmaptools,     # Thematic map tools\n  osmdata,       # OpenStreetMap data\n  OpenStreetMap, # OpenStreetMap data\n  ggmap,         # Spatial visualization (Consider if needed with tmap)\n  maptiles,      # Map tiles\n  tidyterra,     # OpenStreetMap data\n  tigris,        # US Census TIGER/Line shapefiles\n  maps          # Draw geographical maps (Consider if needed with sf/tmap)\n)\n\n# Time Series\np_load(\n  xts,           # Extensible time series\n  spacetime,     # Spatio-temporal data\n  tsibble,       # Tidy temporal data frames\n  slider,        # Sliding window functions\n  imputeTS,      # Time series imputation\n  feasts,        # Time series feature extraction\n  forecast,      # Time series forecasting\n  trending,      # Trending analysis\n  tibbletime     # Time-aware tibbles\n)\n\n# Visualization (ggplot2 related first)\np_load(\n  scales,        # Graphical scales (often used with ggplot2)\n  systemfonts,   # System fonts\n  extrafont,     # Font management\n  showtext,      # Easy font use in plots\n  patchwork,     # Plot composition\n  ggpp,          # ggplot2 extensions\n  ggExtra,       # ggplot2 enhancements\n  ggalt,         # Extra ggplot2 geoms/stats\n  ggpubr,        # Easy plot creation\n  ggridges,      # Ridgeline plots\n  ggfittext,     # Improved text rendering\n  ggtext,         # Improved text rendering\n  ggthemes,       # ggplot2 themes\n  ggsci,          # ggplot2 color palettes\n  scico,          # Scientific color maps\n  hrbrthemes,     # ggplot2 themes\n  viridis         # ggplot2 color palettes\n)\n\n# Visualization (GitHub)\np_load_gh(\n  \"AliciaSchep/gglabeller\",       # Easy plot labeling\n  \"MarcellGranat/ggProfessional\", # Professional ggplot2\n  \"mattcowgill/ggannotate\",       # Easy plot annotation\n  \"amirmasoudabdol/sfthemes\"     # Simple features themes\n)\n\n# Visualization (Other)\np_load(\n  # extrafont,  # Font tools (Consider if needed with showtext)\n  magick,        # Image processing (Consider if actively used)\n  xkcd,          # xkcd theme (Consider if actively used)\n  harrypotter    # Harry Potter theme (Consider if actively used)\n)\n\n# Compatibility & Other\np_load(\n  officedown,    # Microsoft Office compatibility\n  DBI,           # Database interaction\n  units,         # Measurement units\n  yardstick,     # Model metrics\n  googlesheets4, # Google Sheets interaction\n  surveillance   # Epidemic modeling\n)\n\n\n# -----------------------------------------------------------------------------\n# 3. Conflict Resolution (After loading)\n# -----------------------------------------------------------------------------\n\nconflicts_prefer(\n  dplyr::filter, \n  dplyr::first,\n  dplyr::summarize, \n  dplyr::select, \n  janitor::clean_names,\n  janitor::chisq.test,\n  rio::export,\n  tidyselect::starts_with,\n  tidygeocoder::geocode\n)\n\n\n# -----------------------------------------------------------------------------\n# 4. Confirmation output\n# -----------------------------------------------------------------------------\n\nstr_glue(\"Packages loaded. \\n\")\n```\n\n```{r}\n#| label: set-options\n#| message: false\n#| warning: false\n#| error: false\n\n# -----------------------------------------------------------------------------\n# 1. Setup/Dependencies\n# -----------------------------------------------------------------------------\n\n# Install packages if not already installed (using a helper function)\nif (!require(\"pacman\")) {\n  install.packages(\"pacman\", repos = \"https://cran.rstudio.org\")\n}\nlibrary(pacman)\n\np_load(\"magick\", \"janitor\", \"dplyr\", \"tidycensus\", \"sysfonts\", \"rscopus\", \n       \"gtsummary\", \"flextable\", \"showtext\", \"ggmap\", \"stringr\")\n\n\n# -----------------------------------------------------------------------------\n# 2. Global Parameters/Constants\n# -----------------------------------------------------------------------------\n\n# API Keys (Store securely, ideally in environment variables)\nelsevier_api_key <- Sys.getenv(\"ELSEVIER_API_KEY\")  # Get from environment\ncensus_api_key <- Sys.getenv(\"CENSUS_API_KEY\") # Get from environment\ngoogle_api_key <- Sys.getenv(\"GOOGLE_API_KEY\") # Get from environment\ngooglegeocode_api_key <- Sys.getenv(\"GOOGLEGEOCODE_API_KEY\") # Get from environment\n\n# Check if API keys are set (important for security)\nif (elsevier_api_key == \"\") {\n  stop(\"Elsevier API key not found. Set the ELSEVIER_API_KEY environment variable.\")\n}\nif (census_api_key == \"\") {\n  stop(\"Census API key not found. Set the CENSUS_API_KEY environment variable.\")\n}\nif (google_api_key == \"\") {\n  stop(\"Google API key not found. Set the GOOGLE_API_KEY environment variable.\")\n}\nif (googlegeocode_api_key == \"\") {\n  stop(\"Google GeoCode API key not found. Set the GOOGLEGEOCODE_API_KEY environment variable.\")\n}\n\n# GIS repo (set for your own use)\ngis_repo <- Sys.getenv(\"GIS_SHAPEFILE_REPO\")\n\n# Check if GIS repo is set\nif (gis_repo == \"\") {\n  stop(\"GIS shapefile repository not found. Set the GIS_SHAPEFILE_REPO environment variable using the following code: `gis_repo <- 'path/to/shapefiles/folder', or add the following code to your .Rprofile using `file.edit(file.path('~', '.Rprofile'))`: `Sys.setenv(DATA_REPO = 'path/to/shapefiles/folder')`\")\n}\n\n# Data repo (set for your own use)\ndata_repo <- Sys.getenv(\"DATA_REPO\")\n\n# Check if GIS repo is set\nif (data_repo == \"\") {\n  stop(\"Data repository not found. Set the DATA_REPO environment variable using the following code: `data_repo <- 'path/to/data/folder'`, or add the following code to your .Rprofile using `file.edit(file.path('~', '.Rprofile'))`: `Sys.setenv(DATA_REPO = 'path/to/data/folder')`\")\n}\n\n# Other Global Settings\nset.seed(13) # Random seed for reproducibility\noptions(scipen = 9999) # Large number for scientific notation preference\nsf_use_s2(FALSE) # Use sf package for spatial operations\n\n\n# -----------------------------------------------------------------------------\n# 3. Themes and Table Defaults\n# -----------------------------------------------------------------------------\n\n# gtsummary Themes\ngtsummary::theme_gtsummary_journal(journal = \"jama\")\ngtsummary::theme_gtsummary_compact()\n\n# flextable Defaults (Font check!)\nflextable::set_flextable_defaults(\n  table.layout = \"autofit\", \n  font.size = 10, \n  font.family = \"Times New Roman\", # Ensure this font is available!\n  padding.top = 0, \n  padding.bottom = 0\n)\n\n# custom color palette\nmchd_county_logo_blue = \"#326195\"\nmchd_county_logo_green = \"#48773C\"\nmchd_green = \"#385D2F\"\nmchd_claret = \"#8C183E\"\nmchd_deep_saffron = \"#F79232\"\nmchd_copper_rose = \"#9b6167\"\nmchd_light_cerulean = \"#72CCD4\"\n\nperma_list <- c(\"data_repo\", \"gis_repo\", \"mchd_claret\", \"mchd_copper_rose\", \"mchd_county_logo_blue\", \"mchd_county_logo_green\", \"mchd_deep_saffron\", \"mchd_green\", \"mchd_light_cerulean\")\n\n\n# -----------------------------------------------------------------------------\n# 4. Font Loading\n# -----------------------------------------------------------------------------\n\n# Enable showtext for custom fonts\nshowtext::showtext_auto() \n\n\n# -----------------------------------------------------------------------------\n# 5. API Key Registration\n# -----------------------------------------------------------------------------\n\n# Register API keys (after setting them as environment variables)\n\n# tidycensus\ntidycensus::census_api_key(census_api_key, overwrite = TRUE) \n\n# Elsevier \nrscopus::set_api_key(elsevier_api_key)  \n\n# Google Maps \nggmap::register_google(key = google_api_key) \n\n\n# -----------------------------------------------------------------------------\n# 6. Confirmation output\n# -----------------------------------------------------------------------------\n\nstringr::str_glue(\"Options set. \\n\")\n```\n\n```{r}\n#| label: load-population-data\n#| message: false\n#| warning: false\n#| error: false\n\nus_std_pop <- import(\n  file.path(\"~/R-Home/data-repo/population_objects/us_std_pop_2000.csv\")\n)\n\noregon_pop <- import(\n  file.path(\"~/R-Home/data-repo/population_objects/oregon_state_pop.csv\")\n)\n\nmultnomah_pop <- import(\n  file.path(\"~/R-Home/data-repo/population_objects/multnomah_county_pop.csv\")\n)\n```\n\n--------------------------------------------------------------------------------\n\n```{r}\n#| label: read-google-sheet\n#| message: false\n#| warning: false\n#| error: false\n\n# Define the URL of your Google Sheets file\nsheets_url <- \"https://docs.google.com/spreadsheets/d/1lRMyvGBAXcUaQtmBxXDFyrs889L505OFRRyvC0zQJtg/edit?usp=drive_link\"\n\n# Authenticate and get the file from Google Drive\n# The first time you run this, a browser window will open for authentication.\n# Subsequent calls will likely use a cached token.\nmy_sheet <- googledrive::drive_get(sheets_url)\n\n# Read the data from the Google Sheet into an R data frame\n# The `googlesheets4` package is used for this step.\ndata <- googlesheets4::read_sheet(my_sheet)\n\n# Rename the columns to be more concise and easier to work with.\n# The format is `new_name = \"old_name\"`.\ndata <- data %>%\n  rename(\n    status = \"Approval Status\",\n    race = \"Race\", \n    gender_identity = \"Gender Identity\",\n    sexual_orientation = \"Sexual Orientation\",\n    funding_for = \"Please select the item you are requesting funding for:\",\n    program = \"Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.\",\n    managers_approval = \"Have you received your supervisor's or manager's approval for this request?\",\n    represented_status = \"Union/Representation Status of staff receiving/using the funding\",\n    amount_approved = \"Amount Approved\"\n  )\n\n# Read the data from the \"Funding Tracking\" sheet, starting from the 5th row\nfunding_data <- googlesheets4::read_sheet(my_sheet, sheet = \"Funding Tracking\", \n                                          range = \"A5:E\", \n                                          col_types = c(\n                                            \"ccccn\"\n                                          )) %>%\n\n# Rename the columns for the funding data to match the analysis script\n  rename(\n    date = `Date Funding was approved or Invoice received`, \n    staff = `Staff using funding`, \n    represented_status = `Represented Status`,\n    approved_for = `Approved for`,\n    amount_approved = `Amount Approved`\n  ) %>%\n\n# Clean data\n  filter(!is.na(date))\n```\n\n## Status of application\n\n```{r}\n#| label: tbl-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Status`\ndata %>% tabyl(status)\n```\n\n## Race distibution of applicants\n\n```{r}\n#| label: tbl-race\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Race`\ndata %>% tabyl(race)\n```\n\n## Gender identity of applicants\n\n```{r}\n#| label: tbl-gender-identity\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta GenderIdentity`\ndata %>% tabyl(gender_identity)\n```\n\n## Sexual orientation of applicants\n\n```{r}\n#| label: tbl-sexual-orientation\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta SexualOrientation`\ndata %>% tabyl(sexual_orientation)\n```\n\n## Requested funding for distribution\n\n```{r}\n#| label: tbl-fundingfor\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta fundingfor`\ndata %>% tabyl(funding_for)\n```\n\n## Program\n\n```{r}\n#| label: tbl-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Program`\ndata %>% tabyl(program)\n```\n\n## Representation status\n\n```{r}\n#| label: tbl-represented-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta RepresentedStatus`\ndata %>% tabyl(represented_status)\n```\n\n## Crosstabulation: Program vs. Represented status\n\n```{r}\n#| label: crosstab-program-represented\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Program RepresentedStatus, col chi`\ndata %>% tabyl(program, represented_status) %>% adorn_percentages(\"col\")\nchisq.test(table(data$program, data$represented_status))\n```\n\n## Crosstabulation: Funding for vs. Program\n\n```{r}\n#| label: crosstab-fundingfor-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Fundingfor Program, col chi`\ndata %>% tabyl(funding_for, program) %>% adorn_percentages(\"col\")\nchisq.test(table(data$funding_for, data$program))\n```\n\n## Data analysis of Only Approved applications\n\n```{r}\n#| label: approved-filter\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to `keep if Status==\"Approved\"`\napproved_grants <- data %>%\n  filter(status == \"Approved\")\n```\n\n### Application status (Approved)\n\n```{r}\n#| label: tbl-approved-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Status`\napproved_grants %>% tabyl(status)\n```\n\n### Race distribution (Approved)\n\n```{r}\n#| label: tbl-approved-race\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Race`\napproved_grants %>% tabyl(race)\n```\n\n### Gender identity distribution (Approved)\n\n```{r}\n#| label: tbl-approved-gender-identity\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta GenderIdentity`\napproved_grants %>% tabyl(gender_identity)\n```\n\n### Sexual orientation (Approved)\n\n```{r}\n#| label: tbl-approved-sexual-orientation\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta SexualOrientation`\napproved_grants %>% tabyl(sexual_orientation)\n```\n\n### Funding for (Approved)\n\n```{r}\n#| label: tbl-approved-fundingfor\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta fundingfor`\napproved_grants %>% tabyl(funding_for)\n```\n\n### Program (Approved)\n\n```{r}\n#| label: tbl-approved-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Program`\napproved_grants %>% tabyl(program)\n```\n\n### Representation status (Approved)\n\n```{r}\n#| label: tbl-approved-represented-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta RepresentedStatus`\napproved_grants %>% tabyl(represented_status)\n```\n\n### Crosstabulation: Program vs. Represented status (Approved)\n\n```{r}\n#| label: crosstab-approved-program-represented\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Program RepresentedStatus, col chi`\napproved_grants %>% tabyl(program, represented_status) %>% adorn_percentages(\"col\")\nchisq.test(table(approved_grants$program, approved_grants$represented_status))\n```\n\n### Crosstabulation: Funding for vs. Program (Approved)\n\n```{r}\n#| label: crosstab-approved-fundingfor-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Fundingfor Program, col chi`\napproved_grants %>% tabyl(funding_for, program) %>% adorn_percentages(\"col\")\nchisq.test(table(approved_grants$funding_for, approved_grants$program))\n```\n\n## Funding Analysis\n\n### Representation status (Approved)\n\n```{r}\n#| label: tbl-funding-represented\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta RepresentedStatus`\nfunding_data %>% tabyl(represented_status)\n```\n\n### Approved for (Approved)\n\n```{r}\n#| label: tbl-funding-approvedfor\n#| message: false\n#| warning: false\n#| error: false\n\n# Note: The `Approvedfor` variable was not in the previous script. This assumes it is present in the dataset.\n# Corresponds to: `ta Approvedfor`\nfunding_data %>% tabyl(approved_for)\n```\n\n### Amount approved statistics (Approved)\n\n```{r}\n#| label: tbl-funding-amount\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tabstat AmountApproved, stats (n min max median p25 p75)`\nfunding_data %>%\n  summarise(\n    n = n(),\n    min = min(amount_approved, na.rm = TRUE),\n    max = max(amount_approved, na.rm = TRUE),\n    median = median(amount_approved, na.rm = TRUE),\n    p25 = quantile(amount_approved, 0.25, na.rm = TRUE),\n    p75 = quantile(amount_approved, 0.75, na.rm = TRUE)\n  )\n```\n\n\n\n\n\n\n\n\n--------------------------------------------------------------------------------\n\n```{r}\n#| label: end\n#| message: false\n#| warning: false\n#| error: false\n\n\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: set-working-directory\n#| message: false\n#| warning: false\n#| error: false\n\nrequire(here)\nhere::i_am(\"_archive/_anchor.R\")\n```\n\n```{r}\n#| label: load-packages\n#| message: false\n#| warning: false\n#| error: false\n\n# -----------------------------------------------------------------------------\n# 1. Setup/Dependencies (Package Manager)\n# -----------------------------------------------------------------------------\n\nif (!require(\"pacman\")) {\n  install.packages(\"pacman\", repos = \"https://cran.rstudio.org\")\n}\nlibrary(pacman)\n\n\n# -----------------------------------------------------------------------------\n# 2. Package Loading (Streamlined and Reorganized)\n# -----------------------------------------------------------------------------\n\n# Core/Essential Packages (General R use)\np_load(\n  here,          # Folder/file management\n  conflicted,    # Package conflict management\n  english,       # Translate integers into text\n  labelled,      # Manipulate variable/value metadata\n  rlang,         # Functions for base R and tidyverse features\n  xfun,          # Miscellaneous functions\n  rio,           # Universal import/export\n  archive,       # Archive files\n  filesstrings,  # String manipulation\n  googledrive,   # Interact with Google Drive\n  reprex,        # Reproducible examples\n  knitr        # Dynamic report generation\n)\n\n# Data Manipulation and Transformation (Tidyverse first, then others)\np_load(\n  tidyverse,      # Tidy data handling and analysis (includes dplyr, tidyr, ggplot2, etc.)\n  janitor,       # Data cleaning and examination\n  bestNormalize, # Data normalization\n  mice,          # Multivariate imputation\n  skimr          # Summary statistics\n)\n\n# Tables\np_load(\n  gt,            # Presentation-ready tables\n  gtsummary,     # Publication-ready tables\n  gtExtras,      # Additional gt functions\n  flextable      # MS Office compatible tables\n)\n\n# Survey Analysis\np_load(\n  survey,        # Survey analysis\n  srvyr,         # Survey analysis\n  anesrake       # ANES Raking\n)\n\n# Spatial Analysis (sf preferred, then others)\np_load(\n  sf,            # Simple features (primary spatial package)\n  sfd,           # Space-Filling Design Library\n  sftime,        # Simple Features Time Series\n  spdep,         # Spatial dependence\n  raster,        # Raster data handling\n  CARBayes,      # Bayesian spatial modeling\n  tidycensus,    # US Census data\n  tidygeocoder,  # Geocoding\n  geojsonio,     # GeoJSON/TopoJSON conversion\n  geogrid,       # Geospatial data\n  ggspatial,     # Spatial visualization\n  tmap,          # Thematic maps\n  tmaptools,     # Thematic map tools\n  osmdata,       # OpenStreetMap data\n  OpenStreetMap, # OpenStreetMap data\n  ggmap,         # Spatial visualization (Consider if needed with tmap)\n  maptiles,      # Map tiles\n  tidyterra,     # OpenStreetMap data\n  tigris,        # US Census TIGER/Line shapefiles\n  maps          # Draw geographical maps (Consider if needed with sf/tmap)\n)\n\n# Time Series\np_load(\n  xts,           # Extensible time series\n  spacetime,     # Spatio-temporal data\n  tsibble,       # Tidy temporal data frames\n  slider,        # Sliding window functions\n  imputeTS,      # Time series imputation\n  feasts,        # Time series feature extraction\n  forecast,      # Time series forecasting\n  trending,      # Trending analysis\n  tibbletime     # Time-aware tibbles\n)\n\n# Visualization (ggplot2 related first)\np_load(\n  scales,        # Graphical scales (often used with ggplot2)\n  systemfonts,   # System fonts\n  extrafont,     # Font management\n  showtext,      # Easy font use in plots\n  patchwork,     # Plot composition\n  ggpp,          # ggplot2 extensions\n  ggExtra,       # ggplot2 enhancements\n  ggalt,         # Extra ggplot2 geoms/stats\n  ggpubr,        # Easy plot creation\n  ggridges,      # Ridgeline plots\n  ggfittext,     # Improved text rendering\n  ggtext,         # Improved text rendering\n  ggthemes,       # ggplot2 themes\n  ggsci,          # ggplot2 color palettes\n  scico,          # Scientific color maps\n  hrbrthemes,     # ggplot2 themes\n  viridis         # ggplot2 color palettes\n)\n\n# Visualization (GitHub)\np_load_gh(\n  \"AliciaSchep/gglabeller\",       # Easy plot labeling\n  \"MarcellGranat/ggProfessional\", # Professional ggplot2\n  \"mattcowgill/ggannotate\",       # Easy plot annotation\n  \"amirmasoudabdol/sfthemes\"     # Simple features themes\n)\n\n# Visualization (Other)\np_load(\n  # extrafont,  # Font tools (Consider if needed with showtext)\n  magick,        # Image processing (Consider if actively used)\n  xkcd,          # xkcd theme (Consider if actively used)\n  harrypotter    # Harry Potter theme (Consider if actively used)\n)\n\n# Compatibility & Other\np_load(\n  officedown,    # Microsoft Office compatibility\n  DBI,           # Database interaction\n  units,         # Measurement units\n  yardstick,     # Model metrics\n  googlesheets4, # Google Sheets interaction\n  surveillance   # Epidemic modeling\n)\n\n\n# -----------------------------------------------------------------------------\n# 3. Conflict Resolution (After loading)\n# -----------------------------------------------------------------------------\n\nconflicts_prefer(\n  dplyr::filter, \n  dplyr::first,\n  dplyr::summarize, \n  dplyr::select, \n  janitor::clean_names,\n  janitor::chisq.test,\n  rio::export,\n  tidyselect::starts_with,\n  tidygeocoder::geocode\n)\n\n\n# -----------------------------------------------------------------------------\n# 4. Confirmation output\n# -----------------------------------------------------------------------------\n\nstr_glue(\"Packages loaded. \\n\")\n```\n\n```{r}\n#| label: set-options\n#| message: false\n#| warning: false\n#| error: false\n\n# -----------------------------------------------------------------------------\n# 1. Setup/Dependencies\n# -----------------------------------------------------------------------------\n\n# Install packages if not already installed (using a helper function)\nif (!require(\"pacman\")) {\n  install.packages(\"pacman\", repos = \"https://cran.rstudio.org\")\n}\nlibrary(pacman)\n\np_load(\"magick\", \"janitor\", \"dplyr\", \"tidycensus\", \"sysfonts\", \"rscopus\", \n       \"gtsummary\", \"flextable\", \"showtext\", \"ggmap\", \"stringr\")\n\n\n# -----------------------------------------------------------------------------\n# 2. Global Parameters/Constants\n# -----------------------------------------------------------------------------\n\n# API Keys (Store securely, ideally in environment variables)\nelsevier_api_key <- Sys.getenv(\"ELSEVIER_API_KEY\")  # Get from environment\ncensus_api_key <- Sys.getenv(\"CENSUS_API_KEY\") # Get from environment\ngoogle_api_key <- Sys.getenv(\"GOOGLE_API_KEY\") # Get from environment\ngooglegeocode_api_key <- Sys.getenv(\"GOOGLEGEOCODE_API_KEY\") # Get from environment\n\n# Check if API keys are set (important for security)\nif (elsevier_api_key == \"\") {\n  stop(\"Elsevier API key not found. Set the ELSEVIER_API_KEY environment variable.\")\n}\nif (census_api_key == \"\") {\n  stop(\"Census API key not found. Set the CENSUS_API_KEY environment variable.\")\n}\nif (google_api_key == \"\") {\n  stop(\"Google API key not found. Set the GOOGLE_API_KEY environment variable.\")\n}\nif (googlegeocode_api_key == \"\") {\n  stop(\"Google GeoCode API key not found. Set the GOOGLEGEOCODE_API_KEY environment variable.\")\n}\n\n# GIS repo (set for your own use)\ngis_repo <- Sys.getenv(\"GIS_SHAPEFILE_REPO\")\n\n# Check if GIS repo is set\nif (gis_repo == \"\") {\n  stop(\"GIS shapefile repository not found. Set the GIS_SHAPEFILE_REPO environment variable using the following code: `gis_repo <- 'path/to/shapefiles/folder', or add the following code to your .Rprofile using `file.edit(file.path('~', '.Rprofile'))`: `Sys.setenv(DATA_REPO = 'path/to/shapefiles/folder')`\")\n}\n\n# Data repo (set for your own use)\ndata_repo <- Sys.getenv(\"DATA_REPO\")\n\n# Check if GIS repo is set\nif (data_repo == \"\") {\n  stop(\"Data repository not found. Set the DATA_REPO environment variable using the following code: `data_repo <- 'path/to/data/folder'`, or add the following code to your .Rprofile using `file.edit(file.path('~', '.Rprofile'))`: `Sys.setenv(DATA_REPO = 'path/to/data/folder')`\")\n}\n\n# Other Global Settings\nset.seed(13) # Random seed for reproducibility\noptions(scipen = 9999) # Large number for scientific notation preference\nsf_use_s2(FALSE) # Use sf package for spatial operations\n\n\n# -----------------------------------------------------------------------------\n# 3. Themes and Table Defaults\n# -----------------------------------------------------------------------------\n\n# gtsummary Themes\ngtsummary::theme_gtsummary_journal(journal = \"jama\")\ngtsummary::theme_gtsummary_compact()\n\n# flextable Defaults (Font check!)\nflextable::set_flextable_defaults(\n  table.layout = \"autofit\", \n  font.size = 10, \n  font.family = \"Times New Roman\", # Ensure this font is available!\n  padding.top = 0, \n  padding.bottom = 0\n)\n\n# custom color palette\nmchd_county_logo_blue = \"#326195\"\nmchd_county_logo_green = \"#48773C\"\nmchd_green = \"#385D2F\"\nmchd_claret = \"#8C183E\"\nmchd_deep_saffron = \"#F79232\"\nmchd_copper_rose = \"#9b6167\"\nmchd_light_cerulean = \"#72CCD4\"\n\nperma_list <- c(\"data_repo\", \"gis_repo\", \"mchd_claret\", \"mchd_copper_rose\", \"mchd_county_logo_blue\", \"mchd_county_logo_green\", \"mchd_deep_saffron\", \"mchd_green\", \"mchd_light_cerulean\")\n\n\n# -----------------------------------------------------------------------------\n# 4. Font Loading\n# -----------------------------------------------------------------------------\n\n# Enable showtext for custom fonts\nshowtext::showtext_auto() \n\n\n# -----------------------------------------------------------------------------\n# 5. API Key Registration\n# -----------------------------------------------------------------------------\n\n# Register API keys (after setting them as environment variables)\n\n# tidycensus\ntidycensus::census_api_key(census_api_key, overwrite = TRUE) \n\n# Elsevier \nrscopus::set_api_key(elsevier_api_key)  \n\n# Google Maps \nggmap::register_google(key = google_api_key) \n\n\n# -----------------------------------------------------------------------------\n# 6. Confirmation output\n# -----------------------------------------------------------------------------\n\nstringr::str_glue(\"Options set. \\n\")\n```\n\n```{r}\n#| label: load-population-data\n#| message: false\n#| warning: false\n#| error: false\n\nus_std_pop <- import(\n  file.path(\"~/R-Home/data-repo/population_objects/us_std_pop_2000.csv\")\n)\n\noregon_pop <- import(\n  file.path(\"~/R-Home/data-repo/population_objects/oregon_state_pop.csv\")\n)\n\nmultnomah_pop <- import(\n  file.path(\"~/R-Home/data-repo/population_objects/multnomah_county_pop.csv\")\n)\n```\n\n--------------------------------------------------------------------------------\n\n```{r}\n#| label: read-google-sheet\n#| message: false\n#| warning: false\n#| error: false\n\n# Define the URL of your Google Sheets file\nsheets_url <- \"https://docs.google.com/spreadsheets/d/1lRMyvGBAXcUaQtmBxXDFyrs889L505OFRRyvC0zQJtg/edit?usp=drive_link\"\n\n# Authenticate and get the file from Google Drive\n# The first time you run this, a browser window will open for authentication.\n# Subsequent calls will likely use a cached token.\nmy_sheet <- googledrive::drive_get(sheets_url)\n\n# Read the data from the Google Sheet into an R data frame\n# The `googlesheets4` package is used for this step.\ndata <- googlesheets4::read_sheet(my_sheet)\n\n# Rename the columns to be more concise and easier to work with.\n# The format is `new_name = \"old_name\"`.\ndata <- data %>%\n  rename(\n    status = \"Approval Status\",\n    race = \"Race\", \n    gender_identity = \"Gender Identity\",\n    sexual_orientation = \"Sexual Orientation\",\n    funding_for = \"Please select the item you are requesting funding for:\",\n    program = \"Which program do you work in, or which program will this funding support? If it is funding for/training for multiple programs, please select all that apply. If it is funding for/training for an entire unit, just select that unit.\",\n    managers_approval = \"Have you received your supervisor's or manager's approval for this request?\",\n    represented_status = \"Union/Representation Status of staff receiving/using the funding\",\n    amount_approved = \"Amount Approved\"\n  )\n\n# Read the data from the \"Funding Tracking\" sheet, starting from the 5th row\nfunding_data <- googlesheets4::read_sheet(my_sheet, sheet = \"Funding Tracking\", \n                                          range = \"A5:E\", \n                                          col_types = c(\n                                            \"ccccn\"\n                                          )) %>%\n\n# Rename the columns for the funding data to match the analysis script\n  rename(\n    date = `Date Funding was approved or Invoice received`, \n    staff = `Staff using funding`, \n    represented_status = `Represented Status`,\n    approved_for = `Approved for`,\n    amount_approved = `Amount Approved`\n  ) %>%\n\n# Clean data\n  filter(!is.na(date))\n```\n\n## Status of application\n\n```{r}\n#| label: tbl-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Status`\ndata %>% tabyl(status)\n```\n\n## Race distibution of applicants\n\n```{r}\n#| label: tbl-race\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Race`\ndata %>% tabyl(race)\n```\n\n## Gender identity of applicants\n\n```{r}\n#| label: tbl-gender-identity\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta GenderIdentity`\ndata %>% tabyl(gender_identity)\n```\n\n## Sexual orientation of applicants\n\n```{r}\n#| label: tbl-sexual-orientation\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta SexualOrientation`\ndata %>% tabyl(sexual_orientation)\n```\n\n## Requested funding for distribution\n\n```{r}\n#| label: tbl-fundingfor\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta fundingfor`\ndata %>% tabyl(funding_for)\n```\n\n## Program\n\n```{r}\n#| label: tbl-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Program`\ndata %>% tabyl(program)\n```\n\n## Representation status\n\n```{r}\n#| label: tbl-represented-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta RepresentedStatus`\ndata %>% tabyl(represented_status)\n```\n\n## Crosstabulation: Program vs. Represented status\n\n```{r}\n#| label: crosstab-program-represented\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Program RepresentedStatus, col chi`\ndata %>% tabyl(program, represented_status) %>% adorn_percentages(\"col\")\nchisq.test(table(data$program, data$represented_status))\n```\n\n## Crosstabulation: Funding for vs. Program\n\n```{r}\n#| label: crosstab-fundingfor-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Fundingfor Program, col chi`\ndata %>% tabyl(funding_for, program) %>% adorn_percentages(\"col\")\nchisq.test(table(data$funding_for, data$program))\n```\n\n## Data analysis of Only Approved applications\n\n```{r}\n#| label: approved-filter\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to `keep if Status==\"Approved\"`\napproved_grants <- data %>%\n  filter(status == \"Approved\")\n```\n\n### Application status (Approved)\n\n```{r}\n#| label: tbl-approved-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Status`\napproved_grants %>% tabyl(status)\n```\n\n### Race distribution (Approved)\n\n```{r}\n#| label: tbl-approved-race\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Race`\napproved_grants %>% tabyl(race)\n```\n\n### Gender identity distribution (Approved)\n\n```{r}\n#| label: tbl-approved-gender-identity\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta GenderIdentity`\napproved_grants %>% tabyl(gender_identity)\n```\n\n### Sexual orientation (Approved)\n\n```{r}\n#| label: tbl-approved-sexual-orientation\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta SexualOrientation`\napproved_grants %>% tabyl(sexual_orientation)\n```\n\n### Funding for (Approved)\n\n```{r}\n#| label: tbl-approved-fundingfor\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta fundingfor`\napproved_grants %>% tabyl(funding_for)\n```\n\n### Program (Approved)\n\n```{r}\n#| label: tbl-approved-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta Program`\napproved_grants %>% tabyl(program)\n```\n\n### Representation status (Approved)\n\n```{r}\n#| label: tbl-approved-represented-status\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta RepresentedStatus`\napproved_grants %>% tabyl(represented_status)\n```\n\n### Crosstabulation: Program vs. Represented status (Approved)\n\n```{r}\n#| label: crosstab-approved-program-represented\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Program RepresentedStatus, col chi`\napproved_grants %>% tabyl(program, represented_status) %>% adorn_percentages(\"col\")\nchisq.test(table(approved_grants$program, approved_grants$represented_status))\n```\n\n### Crosstabulation: Funding for vs. Program (Approved)\n\n```{r}\n#| label: crosstab-approved-fundingfor-program\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tab Fundingfor Program, col chi`\napproved_grants %>% tabyl(funding_for, program) %>% adorn_percentages(\"col\")\nchisq.test(table(approved_grants$funding_for, approved_grants$program))\n```\n\n## Funding Analysis\n\n### Representation status (Approved)\n\n```{r}\n#| label: tbl-funding-represented\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `ta RepresentedStatus`\nfunding_data %>% tabyl(represented_status)\n```\n\n### Approved for (Approved)\n\n```{r}\n#| label: tbl-funding-approvedfor\n#| message: false\n#| warning: false\n#| error: false\n\n# Note: The `Approvedfor` variable was not in the previous script. This assumes it is present in the dataset.\n# Corresponds to: `ta Approvedfor`\nfunding_data %>% tabyl(approved_for)\n```\n\n### Amount approved statistics (Approved)\n\n```{r}\n#| label: tbl-funding-amount\n#| message: false\n#| warning: false\n#| error: false\n\n# Corresponds to: `tabstat AmountApproved, stats (n min max median p25 p75)`\nfunding_data %>%\n  summarise(\n    n = n(),\n    min = min(amount_approved, na.rm = TRUE),\n    max = max(amount_approved, na.rm = TRUE),\n    median = median(amount_approved, na.rm = TRUE),\n    p25 = quantile(amount_approved, 0.25, na.rm = TRUE),\n    p75 = quantile(amount_approved, 0.75, na.rm = TRUE)\n  )\n```\n\n\n\n\n\n\n\n\n--------------------------------------------------------------------------------\n\n```{r}\n#| label: end\n#| message: false\n#| warning: false\n#| error: false\n\n\n```\n"},"formats":{"docx":{"identifier":{"display-name":"MS Word","target-format":"docx","base-format":"docx"},"execute":{"fig-width":5,"fig-height":4,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"docx","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"page-width":6.5},"pandoc":{"default-image-extension":"png","to":"docx","output-file":"workforce-development.docx"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"editor":"source","title":"","author":"","date":"`r format(Sys.Date(), '%B %d, %Y')`"},"extensions":{"book":{"selfContainedOutput":true}}},"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"workforce-development.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","editor":"source","title":"","author":"","date":"`r format(Sys.Date(), '%B %d, %Y')`"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"workforce-development.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"editor":"source","title":"","author":"","date":"`r format(Sys.Date(), '%B %d, %Y')`"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":[]}